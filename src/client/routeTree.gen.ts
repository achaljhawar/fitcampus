// This file is auto-generated by TanStack Router

import { createFileRoute } from "@tanstack/react-router"

// Import Routes

import { Route as rootRoute } from "./routes/__root"

// Create Virtual Routes

const IndexLazyImport = createFileRoute("/")()
const NutritionIndexLazyImport = createFileRoute("/Nutrition/")()
const BookIndexLazyImport = createFileRoute("/Book/")()
const BookUpperLazyImport = createFileRoute("/Book/upper")()
const BookLowerLazyImport = createFileRoute("/Book/lower")()
const BookCardioLazyImport = createFileRoute("/Book/cardio")()

// Create/Update Routes

const IndexLazyRoute = IndexLazyImport.update({
  path: "/",
  getParentRoute: () => rootRoute,
} as any).lazy(() => import("./routes/index.lazy").then((d) => d.Route))

const NutritionIndexLazyRoute = NutritionIndexLazyImport.update({
  path: "/Nutrition/",
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import("./routes/Nutrition/index.lazy").then((d) => d.Route),
)

const BookIndexLazyRoute = BookIndexLazyImport.update({
  path: "/Book/",
  getParentRoute: () => rootRoute,
} as any).lazy(() => import("./routes/Book/index.lazy").then((d) => d.Route))

const BookUpperLazyRoute = BookUpperLazyImport.update({
  path: "/Book/upper",
  getParentRoute: () => rootRoute,
} as any).lazy(() => import("./routes/Book/upper.lazy").then((d) => d.Route))

const BookLowerLazyRoute = BookLowerLazyImport.update({
  path: "/Book/lower",
  getParentRoute: () => rootRoute,
} as any).lazy(() => import("./routes/Book/lower.lazy").then((d) => d.Route))

const BookCardioLazyRoute = BookCardioLazyImport.update({
  path: "/Book/cardio",
  getParentRoute: () => rootRoute,
} as any).lazy(() => import("./routes/Book/cardio.lazy").then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/": {
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    "/Book/cardio": {
      preLoaderRoute: typeof BookCardioLazyImport
      parentRoute: typeof rootRoute
    }
    "/Book/lower": {
      preLoaderRoute: typeof BookLowerLazyImport
      parentRoute: typeof rootRoute
    }
    "/Book/upper": {
      preLoaderRoute: typeof BookUpperLazyImport
      parentRoute: typeof rootRoute
    }
    "/Book/": {
      preLoaderRoute: typeof BookIndexLazyImport
      parentRoute: typeof rootRoute
    }
    "/Nutrition/": {
      preLoaderRoute: typeof NutritionIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexLazyRoute,
  BookCardioLazyRoute,
  BookLowerLazyRoute,
  BookUpperLazyRoute,
  BookIndexLazyRoute,
  NutritionIndexLazyRoute,
])
